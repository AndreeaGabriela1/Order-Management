package bll;import bll.validators.StockValidator;import bll.validators.Validator;import dao.OrderDAO;import dao.ProductDAO;import model.Order;import model.Product;import javax.swing.*;import java.util.ArrayList;import java.util.List;public class OrderBLL {    private OrderDAO orderDAO = new OrderDAO();    private List<Validator<Order>> validators = new ArrayList<>();    public OrderBLL() {        validators.add(new StockValidator());    }    public void add(Order newOrder) {        try {            for (Validator<Order> validator : validators) {                validator.validate(newOrder);            }            orderDAO.insert(newOrder, 1);            ProductDAO productDAO = new ProductDAO();            ArrayList<Product> products = productDAO.viewAll();            for (Product product : products) {                if (product.getId() == newOrder.getProductId()) {                    int updatedStock = product.getCurrentStock() - newOrder.getQuantity();                    Product updatedProduct = new Product(product.getId(), product.getName(), product.getPrice(), updatedStock);                    ProductBLL productBLL = new ProductBLL();                    productBLL.update(product.getId(), updatedProduct);                }            }        } catch (Exception e) {            JOptionPane.showMessageDialog(null, "Stock insuficient");        }    }    public JTable viewOrders() {        ArrayList<Order> orders = orderDAO.viewAll();        JTable table = orderDAO.viewAll2(orders);        return table;    }}